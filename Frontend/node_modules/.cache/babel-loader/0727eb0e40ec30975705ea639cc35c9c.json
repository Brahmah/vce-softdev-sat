{"ast":null,"code":"var _jsxFileName = \"/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/areas.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AreasView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      areas: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost/VSV/SAT/API/areas.php\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        areas: result.list\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error: \"Error loading areas\"\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"areas-header\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header networkingDeviceList\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Areas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-badge\",\n              children: \"38\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"devicesSearch\",\n            style: {\n              marginRight: \"140px\"\n            },\n            placeholder: \"Search Areas\",\n            \"data-bind\": \"textInput: deviceSearchQuery, event:{ change: $root.filterNetworkingDevices}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddAreaButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mdc-layout-grid cards-areas-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mdc-layout-grid__inner\",\n          children: this.state.areas.map(area => /*#__PURE__*/_jsxDEV(AreaCard, {\n            area: area\n          }, area.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction AreaCard(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const area = props.area;\n\n  function handleClick() {\n    navigate(\"/areas/\" + area.id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mdc-layout-grid__cell mdc-layout-grid__cell--span-4\",\n    style: {\n      textDecoration: 'none'\n    },\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mdc-card mdc-card__primary-action\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mdc-card__primary-action\",\n        tabIndex: \"0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mdc-card__media mdc-card__media--square\",\n          style: {\n            backgroundColor: area.backgroundColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mdc-card__supporting-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mdc-card__title mdc-card__title--large\",\n          children: area.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mdc-card__subtitle\",\n          style: {\n            color: '#9e9e9e'\n          },\n          children: area.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AreaCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AreaCard;\n\nfunction AddAreaButton(props) {\n  _s2();\n\n  // isModalOpen state\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n  function toggleModal() {\n    setIsModalOpen(!isModalOpen);\n  } // area name state\n\n\n  const [areaName, setAreaName] = React.useState(\"\"); // area description state\n\n  const [areaDescription, setAreaDescription] = React.useState(\"\"); // add area click handler\n\n  function handleAddAreaClick() {\n    $.ajax({\n      url: \"http://localhost/VSV/SAT/API/areas.php\",\n      type: \"POST\",\n      data: {\n        name: areaName,\n        description: areaDescription\n      },\n      success: function (data) {\n        console.log(data); // close modal\n\n        setIsModalOpen(false); // refresh page\n\n        window.location.reload();\n      },\n      error: function (data) {\n        console.log(data);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"topBarActionButton\",\n      onClick: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mdc-fab__icon material-icons\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mdc-fab__label\",\n        children: \"Add Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'topBarActionPopoverArrowUp',\n      style: {\n        visibility: isModalOpen ? 'visible' : 'hidden'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topBarActionPopover\",\n      style: {\n        visibility: isModalOpen ? 'visible' : 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: 'Name',\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: 'propertyInput',\n        placeholder: 'Front Office',\n        value: areaName,\n        onChange: setAreaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: 'Description',\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: 'propertyInput',\n        placeholder: 'D2.1 | Glenroy Campus',\n        value: areaDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'actionButton',\n        onClick: handleAddAreaClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AddAreaButton, \"EoNXAGSJ7uPwDtgeqWuBbFcGUfU=\");\n\n_c2 = AddAreaButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AreaCard\");\n$RefreshReg$(_c2, \"AddAreaButton\");","map":{"version":3,"sources":["/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/areas.js"],"names":["React","useNavigate","$","AreasView","Component","constructor","props","state","error","isLoaded","areas","componentDidMount","fetch","then","res","json","result","setState","list","render","marginRight","map","area","id","AreaCard","navigate","handleClick","textDecoration","backgroundColor","name","color","description","AddAreaButton","isModalOpen","setIsModalOpen","useState","toggleModal","areaName","setAreaName","areaDescription","setAreaDescription","handleAddAreaClick","ajax","url","type","data","success","console","log","window","location","reload","visibility"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport $ from \"jquery\";\n\nexport default class AreasView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      areas: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost/VSV/SAT/API/areas.php\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            areas: result.list,\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error: \"Error loading areas\",\n          });\n        }\n      );\n  }\n\n  render() {\n    return (\n      <div>\n        {/*Header Bar With Search*/}\n        <div className=\"areas-header\">\n          <span className=\"header networkingDeviceList\">\n            <span>\n              <span>Areas</span>\n              <span className=\"header-badge\">38</span>\n            </span>\n            <input\n              type=\"text\"\n              className=\"devicesSearch\"\n              style={{marginRight: \"140px\"}}\n              placeholder=\"Search Areas\"\n              data-bind=\"textInput: deviceSearchQuery, event:{ change: $root.filterNetworkingDevices}\"\n            />\n              <AddAreaButton/>\n          </span>\n        </div>\n        {/*Area Cards */}\n        <div className=\"mdc-layout-grid cards-areas-grid\">\n          <div className=\"mdc-layout-grid__inner\">\n            {this.state.areas.map((area) => (\n              <AreaCard key={area.id} area={area} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction AreaCard(props) {\n  const navigate = useNavigate();\n  const area = props.area;\n\n  function handleClick() {\n    navigate(\"/areas/\" + area.id);\n  }\n\n  return (\n      <div className=\"mdc-layout-grid__cell mdc-layout-grid__cell--span-4\" style={{textDecoration: 'none'}} onClick={handleClick}>\n          <div className=\"mdc-card mdc-card__primary-action\">\n              <div className=\"mdc-card__primary-action\" tabIndex=\"0\">\n                  <div className=\"mdc-card__media mdc-card__media--square\"\n                       style={{backgroundColor: area.backgroundColor}}>\n                  </div>\n              </div>\n              <div className=\"mdc-card__supporting-text\">\n                  <h2 className=\"mdc-card__title mdc-card__title--large\">{area.name}</h2>\n                  <h3 className=\"mdc-card__subtitle\" style={{color: '#9e9e9e'}}>{area.description}</h3>\n              </div>\n          </div>\n      </div>\n  );\n}\n\nfunction AddAreaButton(props) {\n    // isModalOpen state\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\n    function toggleModal() {\n        setIsModalOpen(!isModalOpen)\n    }\n    // area name state\n    const [areaName, setAreaName] = React.useState(\"\");\n    // area description state\n    const [areaDescription, setAreaDescription] = React.useState(\"\");\n    // add area click handler\n    function handleAddAreaClick() {\n        $.ajax({\n            url: \"http://localhost/VSV/SAT/API/areas.php\",\n            type: \"POST\",\n            data: {\n                name: areaName,\n                description: areaDescription\n            },\n            success: function (data) {\n                console.log(data);\n                // close modal\n                setIsModalOpen(false);\n                // refresh page\n                window.location.reload();\n            },\n            error: function (data) {\n                console.log(data);\n            }\n        });\n    }\n\n    return (\n        <div>\n            <button className=\"topBarActionButton\" onClick={toggleModal}>\n                <span className=\"mdc-fab__icon material-icons\">add</span>\n                <span className=\"mdc-fab__label\">Add Area</span>\n            </button>\n            <div className={'topBarActionPopoverArrowUp'} style={{visibility: isModalOpen ? 'visible' : 'hidden'}}/>\n            <div className=\"topBarActionPopover\" style={{visibility: isModalOpen ? 'visible' : 'hidden'}}>\n                <h3>Add Area</h3>\n                <input type='text' placeholder={'Name'} disabled={true}/>\n                <input type='text' className={'propertyInput'} placeholder={'Front Office'} value={areaName} onChange={setAreaName}/>\n                <input type='text' placeholder={'Description'} disabled={true}/>\n                <input type='text' className={'propertyInput'} placeholder={'D2.1 | Glenroy Campus'} value={areaDescription}/>\n                <button className={'actionButton'} onClick={handleAddAreaClick}>Add</button>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}