{"ast":null,"code":"var _jsxFileName = \"/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/components/uptimeChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\"\n    },\n    title: {\n      display: false\n    }\n  },\n  scales: {\n    y: {\n      max: 105,\n      min: 0,\n      ticks: {\n        beginAtZero: true\n      }\n    }\n  }\n};\nexport default class UptimeChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleSelectedChartType = this.toggleSelectedChartType.bind(this); // \n\n    this.state = {\n      chartType: \"Hourly\",\n      uptimeChart: {\n        data: {\n          labels: [...Array(10).keys()].map(x => \"Loading...\"),\n          datasets: [{\n            label: \"Uptime\",\n            data: [0],\n            borderColor: \"grey\",\n            backgroundColor: \"grey\"\n          }]\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getUptime();\n  }\n\n  getUptime() {\n    fetch(`http://localhost/VSV/SAT/API/getEntityUptime.php?id=${this.props.entityId}&type=${this.state.chartType}`).then(res => res.json()).then(result => {\n      this.setState({\n        uptimeChart: {\n          data: result.data\n        }\n      });\n    });\n  }\n\n  toggleSelectedChartType() {\n    this.setState({\n      chartType: 'chartfType'\n    });\n    this.getUptime();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Uptime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"link\",\n          style: {\n            float: \"right\"\n          },\n          onClick: this.toggleSelectedChartType,\n          children: this.state.chartType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        options: options,\n        data: this.state.uptimeChart.data,\n        width: \"656px\",\n        height: \"328px\",\n        style: {\n          display: \"block\",\n          boxSizing: \"border-box\",\n          height: \"164px\",\n          width: \"328px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/components/uptimeChart.js"],"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","options","responsive","plugins","legend","position","title","display","scales","y","max","min","ticks","beginAtZero","UptimeChart","Component","constructor","props","toggleSelectedChartType","bind","state","chartType","uptimeChart","data","labels","Array","keys","map","x","datasets","label","borderColor","backgroundColor","componentDidMount","getUptime","fetch","entityId","then","res","json","result","setState","render","float","boxSizing","height","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    title: {\n      display: false,\n    },\n  },\n  scales: { y: { max: 105, min: 0, ticks: { beginAtZero: true } } },\n};\n\nexport default class UptimeChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleSelectedChartType = this.toggleSelectedChartType.bind(this); // \n    this.state = {\n      chartType: \"Hourly\",\n      uptimeChart: {\n        data: {\n          labels: [...Array(10).keys()].map((x) => \"Loading...\"),\n          datasets: [\n            {\n              label: \"Uptime\",\n              data: [0],\n              borderColor: \"grey\",\n              backgroundColor: \"grey\",\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.getUptime();\n  }\n\n  getUptime() {\n    fetch(\n      `http://localhost/VSV/SAT/API/getEntityUptime.php?id=${this.props.entityId}&type=${this.state.chartType}`\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          uptimeChart: {\n            data: result.data,\n          },\n        });\n      });\n  }\n\n  toggleSelectedChartType() {\n      this.setState({\n          chartType: 'chartfType'\n      });\n    this.getUptime();\n  }\n\n  render() {\n    return (\n      <div>\n        <h5>\n          <span>Uptime</span>\n          <a\n            className=\"link\"\n            style={{ float: \"right\" }}\n            onClick={this.toggleSelectedChartType}\n          >\n              {this.state.chartType}\n          </a>\n        </h5>\n\n        <Line\n          options={options}\n          data={this.state.uptimeChart.data}\n          width={\"656px\"}\n          height={\"328px\"}\n          style={{\n            display: \"block\",\n            boxSizing: \"border-box\",\n            height: \"164px\",\n            width: \"328px\",\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}