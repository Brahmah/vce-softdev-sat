{"ast":null,"code":"var _jsxFileName = \"/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/entityDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport EntitySideDetail from \"../components/entitySideDetail\";\nimport { Routes, Route, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EntityView(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  let params = useParams();\n  let entityId = params.id; // componentDidMount() {\n  //   fetch(`http://localhost/VSV/SAT/API/getEntity.php?id=${'this.props.match.params.id'}`)\n  //     .then((res) => res.json())\n  //     .then(\n  //       (result) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           ...result,\n  //         });\n  //       },\n  //       // Note: it's important to handle errors here\n  //       // instead of a catch() block so that we don't swallow\n  //       // exceptions from actual bugs in components.\n  //       (error) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           error: \"Error loading entity\",\n  //         });\n  //       }\n  //     );\n  // }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"areas-header\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header networkingDeviceList\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Title \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-badge\",\n              children: \"Sub\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(EntitySideDetail, {\n          entityId: 'this.props.match.params.id'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(EntityView, \"GKYw3yO2k8Yf5y54QJOMBMIZqYk=\", false, function () {\n  return [useParams];\n});\n\n_c = EntityView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntityView\");","map":{"version":3,"sources":["/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/entityDetail.js"],"names":["React","useState","EntitySideDetail","Routes","Route","useParams","EntityView","props","error","setError","isLoaded","setIsLoaded","items","setItems","params","entityId","id","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,QAAyC,kBAAzC;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIa,MAAM,GAAGT,SAAS,EAAtB;AACA,MAAIU,QAAQ,GAAGD,MAAM,CAACE,EAAtB,CANsC,CAQxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,MAAIR,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACS,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAI,CAACP,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,wBACI;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACN;AAAM,UAAA,SAAS,EAAC,6BAAhB;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BAEI,QAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;AACJ;;GAvDuBJ,U;UAKPD,S;;;KALOC,U","sourcesContent":["import React, {useState} from \"react\";\nimport EntitySideDetail from \"../components/entitySideDetail\";\nimport { Routes, Route, useParams } from \"react-router-dom\";\n\nexport default function EntityView(props) {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    let params = useParams();\n    let entityId = params.id;\n\n  // componentDidMount() {\n  //   fetch(`http://localhost/VSV/SAT/API/getEntity.php?id=${'this.props.match.params.id'}`)\n  //     .then((res) => res.json())\n  //     .then(\n  //       (result) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           ...result,\n  //         });\n  //       },\n  //       // Note: it's important to handle errors here\n  //       // instead of a catch() block so that we don't swallow\n  //       // exceptions from actual bugs in components.\n  //       (error) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           error: \"Error loading entity\",\n  //         });\n  //       }\n  //     );\n  // }\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div>\n                {/*Header Bar */}\n                <div className=\"areas-header\">\n          <span className=\"header networkingDeviceList\">\n            <span>\n              <span>Title </span>\n              <span className=\"header-badge\">Sub</span>\n            </span>\n          </span>\n                </div>\n                {/*Main Content*/}\n                <div className=\"table-wrapper\">\n                    {/*Side Detail */}\n                    <EntitySideDetail entityId={'this.props.match.params.id'} />\n                    {/*Main Detail */}\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}