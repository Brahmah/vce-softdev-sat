{"ast":null,"code":"var _jsxFileName = \"/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/entityDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport EntitySideDetail from \"../components/entitySideDetail\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EntityView(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  let params = useParams();\n  let entityId = params.id; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(`http://localhost/VSV/SAT/API/getEntity.php?id=${entityId}`).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"areas-header\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"header networkingDeviceList\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-badge\",\n            children: \"Sub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(EntitySideDetail, {\n        entityId: 'this.props.match.params.id'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n}\n\n_s(EntityView, \"Ewe/sSBj8tYuD8zSS4pyh6LhRbw=\", false, function () {\n  return [useParams];\n});\n\n_c = EntityView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntityView\");","map":{"version":3,"sources":["/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/entityDetail.js"],"names":["React","useEffect","useState","EntitySideDetail","useParams","EntityView","props","error","setError","isLoaded","setIsLoaded","items","setItems","params","entityId","id","fetch","then","res","json","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIW,MAAM,GAAGT,SAAS,EAAtB;AACA,MAAIU,QAAQ,GAAGD,MAAM,CAACE,EAAtB,CANsC,CAQtC;AACA;AACA;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACVe,IAAAA,KAAK,CAAE,iDAAgDF,QAAS,EAA3D,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGOG,MAAD,IAAY;AACRV,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACQ,MAAD,CAAR;AACH,KANP,EAOM;AACA;AACA;AACCb,IAAAA,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAbP;AAeL,GAhBQ,EAgBN,EAhBM,CAAT;AAkBI,sBACI;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACN;AAAM,QAAA,SAAS,EAAC,6BAAhB;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BAEI,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBP;;GAhDuBF,U;UAKPD,S;;;KALOC,U","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport EntitySideDetail from \"../components/entitySideDetail\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function EntityView(props) {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    let params = useParams();\n    let entityId = params.id;\n\n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n          fetch(`http://localhost/VSV/SAT/API/getEntity.php?id=${entityId}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n    \n        return (\n            <div>\n                {/*Header Bar */}\n                <div className=\"areas-header\">\n          <span className=\"header networkingDeviceList\">\n            <span>\n              <span>Title </span>\n              <span className=\"header-badge\">Sub</span>\n            </span>\n          </span>\n                </div>\n                {/*Main Content*/}\n                <div className=\"table-wrapper\">\n                    {/*Side Detail */}\n                    <EntitySideDetail entityId={'this.props.match.params.id'} />\n                    {/*Main Detail */}\n                </div>\n            </div>\n        );\n}\n"]},"metadata":{},"sourceType":"module"}