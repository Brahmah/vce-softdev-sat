{"ast":null,"code":"var _jsxFileName = \"/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/entityDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport EntitySideDetail from \"../components/entitySideDetail\";\nimport { Routes, Route, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EntityView(props) {\n  _s();\n\n  var state = {\n    error: null,\n    isLoaded: false,\n    entities: []\n  };\n  let params = useParams();\n  let entityId = params.id;\n  console.log(entityId); // componentDidMount() {\n  //   fetch(`http://localhost/VSV/SAT/API/getEntity.php?id=${'this.props.match.params.id'}`)\n  //     .then((res) => res.json())\n  //     .then(\n  //       (result) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           ...result,\n  //         });\n  //       },\n  //       // Note: it's important to handle errors here\n  //       // instead of a catch() block so that we don't swallow\n  //       // exceptions from actual bugs in components.\n  //       (error) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           error: \"Error loading entity\",\n  //         });\n  //       }\n  //     );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"areas-header\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"header networkingDeviceList\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-badge\",\n            children: \"Sub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(EntitySideDetail, {\n        entityId: 'this.props.match.params.id'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EntityView, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = EntityView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntityView\");","map":{"version":3,"sources":["/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/entityDetail.js"],"names":["React","EntitySideDetail","Routes","Route","useParams","EntityView","props","state","error","isLoaded","entities","params","entityId","id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,QAAyC,kBAAzC;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,MAAIC,KAAK,GAAG;AACRC,IAAAA,KAAK,EAAE,IADC;AAERC,IAAAA,QAAQ,EAAE,KAFF;AAGRC,IAAAA,QAAQ,EAAE;AAHF,GAAZ;AAKA,MAAIC,MAAM,GAAGP,SAAS,EAAtB;AACA,MAAIQ,QAAQ,GAAGD,MAAM,CAACE,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EARsC,CAUxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,6BAAhB;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BAEE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBH;;GAnDuBP,U;UAMPD,S;;;KANOC,U","sourcesContent":["import React from \"react\";\nimport EntitySideDetail from \"../components/entitySideDetail\";\nimport { Routes, Route, useParams } from \"react-router-dom\";\n\nexport default function EntityView(props) {\n    var state = {\n        error: null,\n        isLoaded: false,\n        entities: [],\n    };\n    let params = useParams();\n    let entityId = params.id;\n    console.log(entityId);\n\n  // componentDidMount() {\n  //   fetch(`http://localhost/VSV/SAT/API/getEntity.php?id=${'this.props.match.params.id'}`)\n  //     .then((res) => res.json())\n  //     .then(\n  //       (result) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           ...result,\n  //         });\n  //       },\n  //       // Note: it's important to handle errors here\n  //       // instead of a catch() block so that we don't swallow\n  //       // exceptions from actual bugs in components.\n  //       (error) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           error: \"Error loading entity\",\n  //         });\n  //       }\n  //     );\n  // }\n\n    return (\n      <div>\n        {/*Header Bar */}\n        <div className=\"areas-header\">\n          <span className=\"header networkingDeviceList\">\n            <span>\n              <span>Title </span>\n              <span className=\"header-badge\">Sub</span>\n            </span>\n          </span>\n        </div>\n        {/*Main Content*/}\n        <div className=\"table-wrapper\">\n          {/*Side Detail */}\n          <EntitySideDetail entityId={'this.props.match.params.id'} />\n          {/*Main Detail */}\n        </div>\n      </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}