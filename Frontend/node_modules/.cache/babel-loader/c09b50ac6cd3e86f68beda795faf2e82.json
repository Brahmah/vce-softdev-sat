{"ast":null,"code":"var _jsxFileName = \"/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/areas.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AreasView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      areas: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost/VSV/SAT/API/areas.php\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        areas: result.list\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error: \"Error loading areas\"\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"areas-header\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header networkingDeviceList\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Areas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-badge\",\n              children: \"38\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"devicesSearch\",\n            placeholder: \"Search Areas\",\n            \"data-bind\": \"textInput: deviceSearchQuery, event:{ change: $root.filterNetworkingDevices}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mdc-layout-grid cards-areas-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mdc-layout-grid__inner\",\n          children: this.state.areas.map(area => /*#__PURE__*/_jsxDEV(AreaCard, {\n            area: area\n          }, area.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction AreaCard(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const area = props.area;\n\n  function handleClick() {\n    navigate(\"/areas/\" + entity.DEVICE_ID);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      \"td-online-badge\": \"somevalue\",\n      children: area.backgroundColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: area.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: area.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: area.backgroundColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AreaCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AreaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaCard\");","map":{"version":3,"sources":["/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/areas.js"],"names":["React","useNavigate","AreasView","Component","constructor","props","state","error","isLoaded","areas","componentDidMount","fetch","then","res","json","result","setState","list","render","map","area","id","AreaCard","navigate","handleClick","entity","DEVICE_ID","backgroundColor","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFF,OAAd;AAID,KARL,EASI;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KAjBL;AAmBD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,6BAAhB;AAAA,kCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,eAFZ;AAGE,YAAA,WAAW,EAAC,cAHd;AAIE,yBAAU;AAJZ;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAiBE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,oBACG,KAAKZ,KAAL,CAAWG,KAAX,CAAiBU,GAAjB,CAAsBC,IAAD,iBACpB,QAAC,QAAD;AAAwB,YAAA,IAAI,EAAEA;AAA9B,aAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AA5DoD;;AA+DvD,SAASC,QAAT,CAAkBjB,KAAlB,EAAyB;AAAA;;AACvB,QAAMkB,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMmB,IAAI,GAAGf,KAAK,CAACe,IAAnB;;AAEA,WAASI,WAAT,GAAuB;AACrBD,IAAAA,QAAQ,CAAC,YAAYE,MAAM,CAACC,SAApB,CAAR;AACD;;AAED,sBACE;AAAI,IAAA,OAAO,EAAEF,WAAb;AAAA,4BACE;AAAU,yBAAmB,WAA7B;AAAA,gBAA6CJ,IAAI,CAACO;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKP,IAAI,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKR,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAKT,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhBQL,Q;UACUrB,W;;;KADVqB,Q","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default class AreasView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      areas: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost/VSV/SAT/API/areas.php\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            areas: result.list,\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error: \"Error loading areas\",\n          });\n        }\n      );\n  }\n\n  render() {\n    return (\n      <div>\n        {/*Header Bar With Search*/}\n        <div className=\"areas-header\">\n          <span className=\"header networkingDeviceList\">\n            <span>\n              <span>Areas</span>\n              <span className=\"header-badge\">38</span>\n            </span>\n            <input\n              type=\"text\"\n              className=\"devicesSearch\"\n              placeholder=\"Search Areas\"\n              data-bind=\"textInput: deviceSearchQuery, event:{ change: $root.filterNetworkingDevices}\"\n            />\n          </span>\n        </div>\n        {/*Area Cards */}\n        <div className=\"mdc-layout-grid cards-areas-grid\">\n          <div className=\"mdc-layout-grid__inner\">\n            {this.state.areas.map((area) => (\n              <AreaCard key={area.id} area={area} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction AreaCard(props) {\n  const navigate = useNavigate();\n  const area = props.area;\n\n  function handleClick() {\n    navigate(\"/areas/\" + entity.DEVICE_ID);\n  }\n\n  return (\n    <tr onClick={handleClick}>\n      <td {...{ \"td-online-badge\": \"somevalue\" }}>{area.backgroundColor}</td>\n      <td>{area.name}</td>\n      <td>{area.description}</td>\n      <td>{area.backgroundColor}</td>\n    </tr>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}