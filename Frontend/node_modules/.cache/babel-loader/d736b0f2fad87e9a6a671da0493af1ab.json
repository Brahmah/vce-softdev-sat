{"ast":null,"code":"var _jsxFileName = \"/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/entityDetail.js\";\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EntityView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      entities: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost/VSV/SAT/API/getEntity.php?id=1\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        ...result\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error: \"Error loading entity\"\n      });\n    });\n  }\n\n  render() {\n    var _this$state;\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.IP_ADDRESS]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/bashirrahmah/Desktop/Random Projects/vsv_react_app/vsv-react-app/src/views/entityDetail.js"],"names":["React","Link","useLocation","EntityView","Component","constructor","props","state","error","isLoaded","entities","componentDidMount","fetch","then","res","json","result","setState","render","IP_ADDRESS"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,WAFF,QAGO,kBAHP;;AAKA,eAAe,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZ,WAAGO;AAFS,OAAd;AAID,KART,EASQ;AACA;AACA;AACCR,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KAjBT;AAmBD;;AAEDU,EAAAA,MAAM,GAAG;AAAA;;AACP,wBACE;AAAA,qCAAM,KAAKX,KAAX,gDAAM,YAAYY,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AApCqD","sourcesContent":["import React from \"react\";\nimport {\n  Link,\n  useLocation,\n} from \"react-router-dom\";\n\nexport default class EntityView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      entities: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost/VSV/SAT/API/getEntity.php?id=1\")\n        .then((res) => res.json())\n        .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                ...result,\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error: \"Error loading entity\",\n              });\n            }\n        );\n  }\n\n  render() {\n    return (\n      <h1> {this.state?.IP_ADDRESS}</h1>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}